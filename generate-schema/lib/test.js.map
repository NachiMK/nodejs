{"version":3,"sources":["../test.js"],"names":["generateSchema","require","persons","Id","PublicKey","FirstName","LastName","Gender","BirthDate","DateUpdated","schema","json","console","log","JSON","stringify","schemaWithEnums","generateEnums","maxEnumValues","generateLengths"],"mappings":"AAAA,MAAMA,iBAAiBC,QAAQ,SAAR,CAAvB;;AAEA,MAAMC,UAAU,CACd;AACEC,MAAI,sCADN;AAEEC,aAAW,sCAFb;AAGEC,aAAW,MAHb;AAIEC,YAAU,KAJZ;AAKEC,UAAQ,MALV;AAMEC,aAAW,YANb;AAOEC,eAAa;AAPf,CADc,EAUd;AACEN,MAAI,+CADN;AAEEC,aAAW,+CAFb;AAGEC,aAAW,OAHb;AAIEC,YAAU,OAJZ;AAKEC,UAAQ,QALV;AAMEC,aAAW,YANb;AAOEC,eAAa;AAPf,CAVc,CAAhB;;AAqBA,MAAMC,SAASV,eAAeW,IAAf,CAAoB,QAApB,EAA8BT,OAA9B,CAAf;AACAU,QAAQC,GAAR,CAAY,eAAZ,EAA6BC,KAAKC,SAAL,CAAeL,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAA7B;;AAEA,MAAMM,kBAAkBhB,eAAeW,IAAf,CAAoB,QAApB,EAA8BT,OAA9B,EAAuC;AAC7De,iBAAe,IAD8C;AAE7DC,iBAAe,CAF8C;AAG7DC,mBAAiB;AAH4C,CAAvC,CAAxB;AAKAP,QAAQC,GAAR,CAAY,wBAAZ,EAAsCC,KAAKC,SAAL,CAAeC,eAAf,EAAgC,IAAhC,EAAsC,CAAtC,CAAtC","file":"test.js","sourcesContent":["const generateSchema = require(\"./index\");\n\nconst persons = [\n  {\n    Id: \"363f1eec-a814-4518-a738-6cb844b6cf92\",\n    PublicKey: \"363f1eec-a814-4518-a738-6cb844b6cf92\",\n    FirstName: \"John\",\n    LastName: \"Doe\",\n    Gender: \"Male\",\n    BirthDate: \"2000-04-01\",\n    DateUpdated: \"2018-01-16T23:33:01+00:00\"\n  },\n  {\n    Id: \"abaa80cc-e0eb-4a33-8292-ec937ffe773b_INACTIVE\",\n    PublicKey: \"abaa80cc-e0eb-4a33-8292-ec937ffe773b_INACTIVE\",\n    FirstName: \"Cindy\",\n    LastName: \"Kline\",\n    Gender: \"Female\",\n    BirthDate: \"1974-10-25\",\n    DateUpdated: \"2018-01-16T23:33:44+00:00\"\n  }\n];\n\nconst schema = generateSchema.json(\"Person\", persons);\nconsole.log(\"Without enums\", JSON.stringify(schema, null, 2));\n\nconst schemaWithEnums = generateSchema.json(\"Person\", persons, {\n  generateEnums: true,\n  maxEnumValues: 2,\n  generateLengths: true\n});\nconsole.log(\"With enums and lengths\", JSON.stringify(schemaWithEnums, null, 2));\n"]}