{"version":3,"sources":["../../../src/routes/proxy-request/index.js"],"names":["proxy","before","event","acronym","params","response","headers","Accept","method","json","formatAcronymResult","after","acronymAPIResult","length","input","sf","acronyms","lfs","map","lf"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEO,MAAMA,wBAAQ,wBACnBC,6BADmB,EAEnB,MAAOC,KAAP,IAAiB;AACf,QAAM,EAAEC,OAAF,KAAcD,MAAME,MAA1B;;AAEA,QAAMC,WAAW,MAAM,yBACpB,8DAA6DF,OAAQ,EADjD,EAErB;AACEG,aAAS;AACPC,cAAQ,YADD;AAEP,sBAAgB;AAFT,KADX;AAKEC,YAAQ;AALV,GAFqB,CAAvB;AAUA,QAAMC,OAAOJ,SAASI,IAAT,EAAb;AACAP,QAAMG,QAAN,GAAiBK,oBAAoBD,IAApB,CAAjB;AACD,CAjBkB,EAkBnBE,4BAlBmB,CAAd;;AAqBP,SAASD,mBAAT,CAA6BE,gBAA7B,EAA+C;AAC7C,MAAI,CAACA,gBAAD,IAAqBA,oBAAoB,IAAzC,IAAiD,EAAEA,iBAAiBC,MAAjB,GAA0B,CAA5B,CAArD,EAAqF;AACnF,WAAO,EAAP;AACD;;AAED,QAAMC,QAAQF,iBAAiB,CAAjB,EAAoBG,EAAlC;AACA,QAAMC,WAAWJ,iBAAiB,CAAjB,EAAoBK,GAApB,CAAwBC,GAAxB,CAA6Bf,OAAD,IAAaA,QAAQgB,EAAjD,CAAjB;;AAEA,SAAO;AACLL,SADK;AAELE;AAFK,GAAP;AAID","file":"index.js","sourcesContent":["import ware from 'warewolf';\nimport fetch from 'node-fetch';\nimport { before, after } from '@hixme/before-after-middleware';\n\nexport const proxy = ware(\n  before,\n  async (event) => {\n    const { acronym } = event.params;\n\n    const response = await fetch(\n      `http://www.nactem.ac.uk/software/acromine/dictionary.py?sf=${acronym}`,\n      {\n        headers: {\n          Accept: 'text/plain',\n          'Content-type': 'application/json',\n        },\n        method: 'GET',\n      }\n    );\n    const json = response.json();\n    event.response = formatAcronymResult(json);\n  },\n  after\n);\n\nfunction formatAcronymResult(acronymAPIResult) {\n  if (!acronymAPIResult || acronymAPIResult == null || !(acronymAPIResult.length > 0)) {\n    return {};\n  }\n\n  const input = acronymAPIResult[0].sf;\n  const acronyms = acronymAPIResult[0].lfs.map((acronym) => acronym.lf);\n\n  return {\n    input,\n    acronyms,\n  };\n}\n"]}