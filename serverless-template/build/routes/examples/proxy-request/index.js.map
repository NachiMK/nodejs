{"version":3,"sources":["../../../../src/routes/examples/proxy-request/index.js"],"names":["proxy","event","acronym","params","headers","Accept","method","then","response","json","result","formatAcronymResult","catch","error","acronymAPIResult","length","input","sf","acronyms","lfs","map","lf"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEO,MAAMA,wBAAQ,uCAGnB,MAAOC,KAAP,IAAiB;AACf,QAAM,EAAEC,OAAF,KAAcD,MAAME,MAA1B;;AAEA,QAAM,yBAAO,8DAA6DD,OAAQ,EAA5E,EAA+E;AACnFE,aAAS;AACPC,cAAQ,YADD;AAEP,sBAAgB;AAFT,KAD0E;AAKnFC,YAAQ;AAL2E,GAA/E,EAOHC,IAPG,CAOEC,YAAYA,SAASC,IAAT,EAPd,EAQHF,IARG,CAQGG,MAAD,IAAY;AAChBT,UAAMS,MAAN,GAAeC,oBAAoBD,MAApB,CAAf;AACD,GAVG,EAWHE,KAXG,CAWIC,KAAD,IAAW;AAChBZ,UAAMY,KAAN,GAAcA,KAAd;AACD,GAbG,CAAN;AAcD,CApBkB,eAAd;;AAyBP,MAAMF,sBAAuBG,gBAAD,IAAsB;AAChD,MAAI,CAACA,gBAAD,IAAqBA,oBAAoB,IAAzC,IAAiD,EAAEA,iBAAiBC,MAAjB,GAA0B,CAA5B,CAArD,EAAqF;AACnF,WAAO,EAAP;AACD;;AAED,QAAMC,QAAQF,iBAAiB,CAAjB,EAAoBG,EAAlC;AACA,QAAMC,WAAWJ,iBAAiB,CAAjB,EAAoBK,GAApB,CAAwBC,GAAxB,CAA4BlB,WAAWA,QAAQmB,EAA/C,CAAjB;;AAEA,SAAO;AACLL,SADK;AAELE;AAFK,GAAP;AAID,CAZD","file":"index.js","sourcesContent":["import ware from 'warewolf'\nimport fetch from 'node-fetch'\nimport { before, after } from '../../../utils'\n\nexport const proxy = ware(\n  before,\n\n  async (event) => {\n    const { acronym } = event.params\n\n    await fetch(`http://www.nactem.ac.uk/software/acromine/dictionary.py?sf=${acronym}`, {\n      headers: {\n        Accept: 'text/plain',\n        'Content-type': 'application/json',\n      },\n      method: 'GET',\n    })\n      .then(response => response.json())\n      .then((result) => {\n        event.result = formatAcronymResult(result)\n      })\n      .catch((error) => {\n        event.error = error\n      })\n  },\n\n  after,\n)\n\nconst formatAcronymResult = (acronymAPIResult) => {\n  if (!acronymAPIResult || acronymAPIResult == null || !(acronymAPIResult.length > 0)) {\n    return {}\n  }\n\n  const input = acronymAPIResult[0].sf\n  const acronyms = acronymAPIResult[0].lfs.map(acronym => acronym.lf)\n\n  return {\n    input,\n    acronyms,\n  }\n}\n"]}