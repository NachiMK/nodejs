{"version":3,"sources":["../../src/utils/index.js"],"names":["queryStringIsTrue","horizontalRule","newline","centerContent","getSubdomainPrefix","STAGE","process","env","isProd","test","getStatus","thing","text","match","RegExp","isComplete","defaultResponseConfig","headers","isBase64Encoded","statusCode","responseController","getResults","result","Array","isArray","event","context","done","response","body","stringify","errorHandler","error","type","message","getFormattedError","isInDebugMode","SLS_DEBUG","isDevOrInt","shouldPrintStack","stack","undefined","JSON","status","Number","isInteger","parseInt","STATUS_CODES","before","pathParameters","query","queryStringParameters","stage","params","parse","after","results","isTrue","value","includes","stripNonAlphaNumericChars","replace","isSetToTrue","queryString","logLevel","width","character","shouldConsoleLog","repeat","console","centerText","content","maxWidth","spacing","Math","floor","length","repeatAmount","initialLineHasBeenDrawn","drawInitialNewline","apiRootName"],"mappings":";;;;;;;;;;;;;;;QA2HgBA,iB,GAAAA,iB;QAOAC,c,GAAAA,c;QAMAC,O,GAAAA,O;QAGAC,a,GAAAA,a;QAiBAC,kB,GAAAA,kB;;AA5JhB;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAM,EAAEC,KAAF,KAAYC,QAAQC,GAA1B;AACO,MAAMC,0BAAS,uBAAuBC,IAAvB,CAA4BJ,KAA5B,CAAf;AACA,MAAMK,gCAAYC,SAASC,QAAQ,CAAC,CAACD,MAAME,KAAN,CAAY,IAAIC,MAAJ,CAAY,IAAGF,IAAK,GAApB,EAAwB,GAAxB,CAAZ,CAArC;AACA,MAAMG,kCAAaL,UAAU,WAAV,CAAnB;;AAEP,MAAMM,wBAAwB;AAC5BC,WAAS;AACP,wCAAoC,IAD7B;AAEP,mCAA+B,GAFxB;AAGP,oBAAgB;AAHT,GADmB;AAO5BC,mBAAiB,KAPW;AAQ5BC,cAAY;AARgB,CAA9B;;AAWA,SAASC,kBAAT,CAA4BC,aAAa,CAAC,EAAEC,MAAF,EAAD,KAAgB;AAEvD,UAAQ,OAAOA,MAAf;AACE,SAAK,QAAL;AACE,aAAO,EAAEA,MAAF,EAAP;AACF,SAAK,QAAL;AACE,aAAOC,MAAMC,OAAN,CAAcF,MAAd,IAAwB,CAAC,GAAGA,MAAJ,CAAxB,8BAA2CA,MAA3C,CAAP;AACF,SAAK,WAAL;AAEE,aAAO,EAAP;AACF;AACE,wCAAYA,MAAZ;AATJ;AAWD,CAbD,EAaG;AACD,SAAO,CAACG,KAAD,EAAQC,OAAR,EAAiBC,IAAjB,KAA0B;AAC/B,UAAML,SAASD,WAAWI,KAAX,CAAf;AACA,UAAMG,sCACDZ,qBADC,EAEDS,KAFC;AAGJR,0CACKD,sBAAsBC,OAD3B,EAEKQ,MAAMR,OAFX,CAHI;AAOJY,YAAMN,MAAMC,OAAN,CAAcF,MAAd,IACF,uBAASQ,SAAT,CAAmB,CAAC,GAAGR,MAAJ,CAAnB,CADE,GAEF,uBAASQ,SAAT,4BAAwBR,MAAxB;AATA,MAAN;AAWAK,SAAK,IAAL,EAAWC,QAAX;AACD,GAdD;AAeD;;AAED,MAAMG,eAAe,CAACC,KAAD,EAAQP,KAAR,EAAeC,OAAf,EAAwBC,IAAxB,KAAiC;AACpD,MAAI,qBAAQK,KAAR,CAAJ,EAAoB;AAClB,UAAM,EAAEb,UAAF,EAAcc,IAAd,EAAoBC,OAApB,KAAgCC,kBAAkBH,KAAlB,EAAyBP,KAAzB,CAAtC;AACA,UAAMW,gBAAgB,OAAO3B,IAAP,CAAYH,QAAQC,GAAR,CAAY8B,SAAxB,CAAtB;AACA,UAAMC,aAAa,iBAAiB7B,IAAjB,CAAsBH,QAAQC,GAAR,CAAYF,KAAlC,CAAnB;AACA,UAAMkC,mBAAmBH,iBAAiBE,UAA1C;;AAEA,UAAME,QAAQD,mBAAmBP,MAAMQ,KAAzB,GAAiCC,SAA/C;;AAEAd,SAAK,IAAL,6BACKX,qBADL;AAEEC,0CACKD,sBAAsBC,OAD3B,CAFF;AAKEE,gBALF;AAMEU,YAAMa,KAAKZ,SAAL,CAAe;AACnBa,gBAAQxB,UADW;AAEnBc,YAFmB;AAGnBC,eAHmB;AAInBM;AAJmB,OAAf;AANR;AAaA;AACD;AACDb;AACD,CAzBD;;AA2BA,SAASQ,iBAAT,CAA2BH,QAAQ,EAAnC,EAAuCP,QAAQ,EAA/C,EAAmD;AACjD,MAAI,EAAEN,aAAa,GAAf,KAAuBM,KAA3B;AACA,MAAIO,MAAMb,UAAV,EAAsB;AACpB,KAAC,EAAEA,UAAF,KAAiBa,KAAlB;AACD;AACD,MAAIY,OAAOC,SAAP,CAAiBb,KAAjB,CAAJ,EAA6B;AAC3Bb,iBAAaa,KAAb;AACD;AACDb,eAAayB,OAAOE,QAAP,CAAgB3B,UAAhB,EAA4B,EAA5B,CAAb;AACA,QAAMc,OAAO,eAAKc,YAAL,CAAkB5B,UAAlB,KAAiC,uBAA9C;AACA,QAAMe,UAAUF,MAAME,OAAN,GAAgBF,MAAME,OAAtB,GAAiC,GAAEf,UAAW,KAAIc,IAAK,EAAvE;;AAEA,SAAO,EAAEd,UAAF,EAAcc,IAAd,EAAoBC,OAApB,EAAP;AACD;;AAEM,MAAMc,0BAAS;AAAA,6CAAK,WAAOvB,QAAQ,EAAf,EAAsB;AAC/C,UAAM;AACJI,aAAO,EADH;AAEJoB,uBAAiB,EAFb;AAGJC,cAAQ,EAHJ;AAIJC,8BAAwB;AAJpB,QAKF1B,KALJ;;AAOAA,UAAM2B,KAAN,GAAc9C,QAAQC,GAAR,CAAYF,KAA1B;AACAoB,UAAM4B,MAAN,8BAAoBF,qBAApB,EAA8CF,cAA9C,EAAiEC,KAAjE;AACAzB,UAAMI,IAAN,GAAa,sBAASA,IAAT,IAAiBa,KAAKY,KAAL,CAAWzB,IAAX,CAAjB,GAAoCA,IAAjD;AACD,GAXqB;;AAAA;AAAA;AAAA;AAAA,KAAf;;AAaA,MAAM0B,wBAAQ;AAAA,8CACnB,WAAO9B,KAAP,EAAiB;AACfA,UAAMI,IAAN,GAAaJ,MAAMH,MAAN,IAAgBG,MAAM+B,OAAtB,IAAiC,EAA9C;AACD,GAHkB;;AAAA;AAAA;AAAA;AAAA,MAKnBpC,oBALmB,EAMnBW,YANmB,CAAd;;AASA,MAAM0B,0BAASC,SACpBA,SAASA,SAAS,IAAlB,IAA0B,CAAC,IAAD,EAAO,MAAP,EAAe,CAAf,EAAkB,GAAlB,EAAuB,KAAvB,EAA8BC,QAA9B,CAAuCD,KAAvC,CADrB;;AAGA,MAAME,gEAA4BF,SAAU,GAAEA,KAAM,EAAT,CAAWG,OAAX,CAAmB,YAAnB,EAAiC,EAAjC,CAA3C;;AAEA,MAAMC,oCAAc9D,iBAApB;AACA,SAASA,iBAAT,CAA2B+D,WAA3B,EAAwC;AAC7C,SAAON,OAAOG,0BAA0BG,WAA1B,CAAP,CAAP;AACD;;AAED,MAAMC,WAAW,MAAjB;;AAGO,SAAS/D,cAAT,CAAwBgE,QAAQ,EAAhC,EAAoCC,YAAY,GAAhD,EAAqDC,mBAAmB,KAAxE,EAA+E;AACpF,MAAIA,gBAAJ,EAAsB;AACpB,WAAOD,UAAUE,MAAV,CAAiBH,KAAjB,CAAP;AACD;AACD,SAAOI,QAAQL,QAAR,EAAmB,IAAGE,UAAUE,MAAV,CAAiBH,KAAjB,CAAwB,GAA9C,CAAP;AACD;AACM,SAAS/D,OAAT,GAAmB;AAAEmE,UAAQL,QAAR,EAAkB/D,eAAe,CAAf,EAAkB,EAAlB,EAAsB,IAAtB,CAAlB;AAAgD;;AAErE,MAAMqE,kCAAanE,aAAnB;AACA,SAASA,aAAT,CAAuBoE,UAAU,EAAjC,EAAqCC,WAAW,EAAhD,EAAoDC,UAAUC,KAAKC,KAAL,CAAW,CAACH,WAAW,yBAAgBD,OAAhB,EAAyBK,MAArC,IAA+C,CAA1D,CAA9D,EAA4H;AACjI,QAAMC,eAAgBL,WAAa,GAAEvE,eAAewE,OAAf,EAAwB,GAAxB,EAA6B,IAA7B,CAAmC,GAAE,yBAAgBF,OAAhB,CAAyB,GAAEtE,eAAewE,OAAf,EAAwB,GAAxB,EAA6B,IAA7B,CAAmC,EAAvG,CAA0GG,MAAtH,GAAgI,CAAhI,GAAoI,CAApI,GAAyIJ,WAAa,GAAEvE,eAAewE,OAAf,EAAwB,GAAxB,EAA6B,IAA7B,CAAmC,GAAE,yBAAgBF,OAAhB,CAAyB,GAAEtE,eAAewE,OAAf,EAAwB,GAAxB,EAA6B,IAA7B,CAAmC,EAAvG,CAA0GG,MAAnR;AACAP,UAAQL,QAAR,EAAmB,IAAG/D,eAAewE,OAAf,EAAwB,GAAxB,EAA6B,IAA7B,CAAmC,GAAEF,OAAQ,GAAEtE,eAAewE,OAAf,EAAwB,GAAxB,EAA6B,IAA7B,CAAmC,GAAE,IAAIL,MAAJ,CAAWS,YAAX,CAAyB,GAAnI;AACD;;AAED,IAAIC,0BAA0B,KAA9B;AACO,MAAMC,kDAAqB,MAAM;AACtC,MAAID,uBAAJ,EAA6B;AAC3B,WAAO,KAAP;AACD;;AAEDA,4BAA0B,IAA1B;AACA5E;AACAD;AACA,SAAO,IAAP;AACD,CATM;;AAWA,SAASG,kBAAT,CAA4B4E,cAAc,KAA1C,EAAiD5B,KAAjD,EAAwD;AAC7D,MAAIA,UAAU,MAAd,EAAsB,OAAQ,GAAE4B,WAAY,EAAtB;AACtB,MAAI5B,UAAU,KAAd,EAAqB,OAAQ,OAAM4B,WAAY,EAA1B;AACrB,MAAI5B,UAAU,KAAd,EAAqB,OAAQ,OAAM4B,WAAY,EAA1B;;AAGrBV,aAAW,iCAAX;AACA,SAAQ,OAAMU,WAAY,EAA1B;AACD","file":"index.js","sourcesContent":["import { isError, isString } from 'lodash'\nimport circular from 'circular-json'\nimport http from 'http'\nimport stripAnsiColors from 'strip-ansi'\nimport ware from 'warewolf'\n\nconst { STAGE } = process.env\nexport const isProd = /^prod(?:uction)?$/gim.test(STAGE)\nexport const getStatus = thing => text => !!thing.match(new RegExp(`^${text}$`, 'i'))\nexport const isComplete = getStatus('completed')\n\nconst defaultResponseConfig = {\n  headers: {\n    'Access-Control-Allow-Credentials': true, // Required for cookies, authorization headers with HTTPS\n    'Access-Control-Allow-Origin': '*',       // Required for CORS support to work\n    'Content-Type': 'text/html;charset=utf-8',\n    // 'Content-Type': 'application/json',\n  },\n  isBase64Encoded: false,\n  statusCode: 200,\n}\n\nfunction responseController(getResults = ({ result }) => {\n  /* eslint-disable no-nested-ternary */\n  switch (typeof result) {\n    case 'string':\n      return { result }\n    case 'object':\n      return Array.isArray(result) ? [...result] : { ...result }\n    case 'undefined':\n      // not sure how we should be handling this\n      return {}\n    default:\n      return { ...result }\n  }\n}) {\n  return (event, context, done) => {\n    const result = getResults(event)\n    const response = {\n      ...defaultResponseConfig,\n      ...event,\n      headers: {\n        ...defaultResponseConfig.headers,\n        ...event.headers,\n      },\n      body: Array.isArray(result)\n        ? circular.stringify([...result])\n        : circular.stringify({ ...result }),\n    }\n    done(null, response)\n  }\n}\n\nconst errorHandler = (error, event, context, done) => {\n  if (isError(error)) {\n    const { statusCode, type, message } = getFormattedError(error, event)\n    const isInDebugMode = /^\\*$/.test(process.env.SLS_DEBUG) // check for '*'\n    const isDevOrInt = /^(?:int|dev)$/i.test(process.env.STAGE) // check for 'dev' or 'int'\n    const shouldPrintStack = isInDebugMode && isDevOrInt\n    // add stack trace if running in 'dev' or 'int, and have opted-in\n    const stack = shouldPrintStack ? error.stack : undefined\n\n    done(null, {\n      ...defaultResponseConfig,\n      headers: {\n        ...defaultResponseConfig.headers,\n      },\n      statusCode,\n      body: JSON.stringify({\n        status: statusCode,\n        type,\n        message,\n        stack,\n      }),\n    })\n    return\n  }\n  done()\n}\n\nfunction getFormattedError(error = {}, event = {}) {\n  let { statusCode = 500 } = event\n  if (error.statusCode) {\n    ({ statusCode } = error)\n  }\n  if (Number.isInteger(error)) {\n    statusCode = error\n  }\n  statusCode = Number.parseInt(statusCode, 10)\n  const type = http.STATUS_CODES[statusCode] || 'An Error Has Occurred'\n  const message = error.message ? error.message : `${statusCode}: ${type}`\n\n  return { statusCode, type, message }\n}\n\nexport const before = ware(async (event = {}) => {\n  const {\n    body = {},\n    pathParameters = {},\n    query = {},\n    queryStringParameters = {},\n  } = event\n\n  event.stage = process.env.STAGE\n  event.params = { ...queryStringParameters, ...pathParameters, ...query }\n  event.body = isString(body) ? JSON.parse(body) : body\n})\n\nexport const after = ware(\n  async (event) => {\n    event.body = event.result || event.results || {}\n  },\n\n  responseController(),\n  errorHandler,\n)\n\nexport const isTrue = value =>\n  value && value != null && [true, 'true', 1, '1', 'yes'].includes(value)\n\nexport const stripNonAlphaNumericChars = value => `${value}`.replace(/[^\\w\\s]*/gi, '')\n\nexport const isSetToTrue = queryStringIsTrue\nexport function queryStringIsTrue(queryString) {\n  return isTrue(stripNonAlphaNumericChars(queryString))\n}\n\nconst logLevel = 'info'\n\n/* eslint-disable no-console */\nexport function horizontalRule(width = 78, character = 'â€”', shouldConsoleLog = false) {\n  if (shouldConsoleLog) {\n    return character.repeat(width)\n  }\n  return console[logLevel](`|${character.repeat(width)}|`)\n}\nexport function newline() { console[logLevel](horizontalRule(1, '', true)) }\n\nexport const centerText = centerContent\nexport function centerContent(content = '', maxWidth = 78, spacing = Math.floor((maxWidth - stripAnsiColors(content).length) / 2)) {\n  const repeatAmount = (maxWidth - (`${horizontalRule(spacing, ' ', true)}${stripAnsiColors(content)}${horizontalRule(spacing, ' ', true)}`).length) < 0 ? 0 : (maxWidth - (`${horizontalRule(spacing, ' ', true)}${stripAnsiColors(content)}${horizontalRule(spacing, ' ', true)}`).length)\n  console[logLevel](`|${horizontalRule(spacing, ' ', true)}${content}${horizontalRule(spacing, ' ', true)}${' '.repeat(repeatAmount)}|`)\n}\n\nlet initialLineHasBeenDrawn = false\nexport const drawInitialNewline = () => {\n  if (initialLineHasBeenDrawn) {\n    return false\n  }\n\n  initialLineHasBeenDrawn = true\n  newline()\n  horizontalRule()\n  return true\n}\n\nexport function getSubdomainPrefix(apiRootName = 'api', stage) {\n  if (stage === 'prod') return `${apiRootName}`\n  if (stage === 'int') return `int-${apiRootName}`\n  if (stage === 'dev') return `dev-${apiRootName}`\n\n  // if none of the above trigger, then return a default of dev\"\n  centerText('WARNING: Couldn\\'t detect STAGE')\n  return `dev-${apiRootName}`\n}\n"]}