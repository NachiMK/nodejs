{"version":3,"sources":["../../../src/lib/authorizers/index.js"],"names":["authorizer","event","context","done","token","authorizationToken","generatePolicy","methodArn","principalId","Effect","Resource","authResponse","policyDocument","Version","Statement","Action"],"mappings":";;;;;AAEO,MAAMA,kCAAa,CAACC,KAAD,EAAQC,OAAR,EAAiBC,IAAjB,KAA0B;AAClD,QAAMC,QAAQH,MAAMI,kBAApB;;AAKA,UAAQD,KAAR;AACE,SAAK,OAAL;AACED,WAAK,IAAL,EAAWG,eAAe,MAAf,EAAuB,OAAvB,EAAgCL,MAAMM,SAAtC,CAAX;AACA;AACF,SAAK,MAAL;AACEJ,WAAK,IAAL,EAAWG,eAAe,MAAf,EAAuB,MAAvB,EAA+BL,MAAMM,SAArC,CAAX;AACA;AACF,SAAK,cAAL;AACEJ,WAAK,cAAL;AACA;AACF;AACEA,WAAK,OAAL;AAXJ;AAaD,CAnBM;;AAqBP,MAAMG,iBAAiB,CAACE,WAAD,EAAcC,MAAd,EAAsBC,QAAtB,KAAmC;AACxD,QAAMC,eAAe;AACnBH;AADmB,GAArB;;AAIA,MAAIC,UAAUC,QAAd,EAAwB;AACtBC,iBAAaC,cAAb,GAA8B;AAC5BC,eAAS,YADmB;AAE5BC,iBAAW,CAAC;AACVC,gBAAQ,oBADE;AAEVN,cAFU;AAGVC;AAHU,OAAD;AAFiB,KAA9B;AAQD;;AAED,SAAOC,YAAP;AACD,CAjBD","file":"index.js","sourcesContent":["// import ware from 'warewolf';\n\nexport const authorizer = (event, context, done) => {\n  const token = event.authorizationToken\n\n  // ... your additional auth logic here ...\n\n  // For simplicity in this example, the `token` is treated as the status\n  switch (token) {\n    case 'allow':\n      done(null, generatePolicy('user', 'Allow', event.methodArn))\n      break\n    case 'deny':\n      done(null, generatePolicy('user', 'Deny', event.methodArn))\n      break\n    case 'unauthorized':\n      done('Unauthorized')\n      break\n    default:\n      done('Error')\n  }\n}\n\nconst generatePolicy = (principalId, Effect, Resource) => {\n  const authResponse = {\n    principalId,\n  }\n\n  if (Effect && Resource) {\n    authResponse.policyDocument = {\n      Version: '2012-10-17',\n      Statement: [{\n        Action: 'execute-api:Invoke',\n        Effect,\n        Resource,\n      }],\n    }\n  }\n\n  return authResponse\n}\n"]}